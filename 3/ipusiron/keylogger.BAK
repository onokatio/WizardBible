■WB3　イプシロン原稿


●keykatcher
　keykatcherはhttp://www.keykatcher.comで購入できるハードウェア型キーロガーです。ログ容量が32KBのモノが59ドル、64KBのモノが79ドルで購入できます。
　『コンピュータ悪のマニュアル　ビギナーズ』でもキーロガーの項で取り上げました。

　今回、実際に２つ購入したので（１つはMaDさんにあげた）、実験結果のレポートを発表します。

●接続方法
　keykatcherの取り付け方法は簡単です。

１：ターゲットPCのキーボードケーブルであるPS/2プラグを抜きます。

２：その間にkeykatcherを接続します。

３：これで完了です。

●操作方法

１：keykatcherを使うために、まず最初にテキストエディタを開きます。

２：次に、初期パスワードは「keykatcher」なので、それをテキストエディタ上で入力します。

３：すると、次のようなメニューが表示されます。

-----
keykatcher 64K 3.7
064859 bytes free
1-View Memory
2-Erase Memory
3-Change Password
4-Disable recording
5-NETPatrol Output
6-Search for String
7-Exit
-----

　１行目はキーロガーのバージョンとタイプを示します。

　２行目ではまだ記録できる容量が示されます。この例では64,859バイト残っていることを意味します。

　出力結果の３行目以降がメニューです。
　１がログ表示、２がログクリア、３がパスワード変更、４がログ記録停止、５がwwwを含む行周辺、すなわちURLらしき文字列を含む行周辺の列挙、６が特定のキーワードを含む行周辺の列挙、７がメニューを抜け出しです。

●keykatcherが記録できるモノ
　keykatcherのログを表示させれば（メニューの１番）分かりますが、基本的に全て半角英数記号で記録されます。そして、バックスペース、改行、スペースも記録されます。ただし、[Ctrl]キー操作は記録されません。シンプルなので、特定の目的に使う場合に向き、余分なログを残さないという点では評価できます。

　ソフトウェア型キーロガーではないのでもちろんマウス操作、ウィンドウ操作などはログとして残りません。ソフトウェア型キーロガーにも複数の種類が存在しますが、キーバッファをキャプチャーするタイプに近いです。

●ハードウェア型キーロガーの大きな特徴
　ハードウェア型キーロガーはソフトウェア型キーロガーに比べて有利な点がいくつかあります。どんな点において有利であるかをここで紹介します。

○BIOSのパスワードを取得
　BIOSのパスワードクラッキングは、ソフトウェア型のキーロガーでは難しいですが、ハードウェア型のキーロガーだったら簡単にキャプチャーできます。

○ログインパスワードを取得
　電源投入後、システムが立ち上がり、ログイン（ログオン）の認証が始まりますが、この認証時には基本的にソフトウェア型キーロガーは立ち上がっていない状態なのでキャプチャーできません。
　しかし、ハードウェア型のキーロガーだったら簡単にキャプチャーできます。

○ログ回収が楽
　仮にネットカフェに設置したとします。１回設置したら、後日keykatcher本体を回収しにいくのではなく、利用客を装い、普通にキーロガーのパスワードを入力し管理メニューを開きログだけを他のファイルに保存し、ログを消去しておけば、半永久的に活用できます。

○OSに依存しない
　直接キー入力を記録しているので、OSに依存しません。これはソフトウェア型キーロガーには不可能な大きな特徴です。例えば、Linuxのテキストエディタを開いて、パスワードを入力すれば、ちゃんとメニューが表示されます。実際に、Windows,Linux,超漢字で実験したところうまくいきました。

　超漢字の世界にはまだキーロガーはありません（聞いたことがない）が、これで根底から覆ることが分かります。

○無線との連携でログ回収は遠隔で行える
　ログを自動で無線送信するように改造できれば、わざわざ設置マシンの前に座ることなくログを記録できます。
　これは追跡を逃れる手としては非常に有効です。
　ただし、コストの面と比較して得かどうかを天秤にかける必要はあるでしょう。


　一方、ハードウェア型キーロガー故の欠点もあります。

○ネット経由でリモートからログ回収が不可能
　設置箇所がHDの中ではなく、キーボードとマシンの間にあるわけなので、リモートから通常は管理メニューを表示させることはできません。

○コストがかかる
　ソフトウェア型キーロガーの場合、何百台に設置しようが根本的にお金はかかりません（キーロガーのシェア料金などは計算しない）。
　しかし、ハードウェア型キーロガーの場合、設置する台数分だけコストがかさみます。よって、多くのマシンに設置する場合は、自作するほうが低コストで収まると思います。

○ログ表示に時間がかかる
　全部のログをテキストファイルに保存したい場合、メニュー１で新規テキストファイルにログを全表示してそれを保存する必要があります。これがいちいち表示されていくわけなのでログが膨大だと結構時間がかかります。
　さらに、このログ表示時は他の作業が行えません。なぜならば、他の作業をしようと、他のテキストファイルのウィンドウをアクティブにすると、そこにカーソルが写ってしまうので、そこにキーロガーのログが表示されてしまうからです。

●ログの読み方
　キーロガーの解説、設置方法などを解説している本はたくさんありますが、ログの解読方法といったことまで解説した本は少ないように感じます。これからは手口やテクニックだけではなく、実際に実験した結果分かることやそれ故の苦悩などを解説していきたいと思っています。

　では、本題に移ります。

　次のログは、この原稿を書きながらキャプチャーしたキーログのほんの一部です。

-----
maru 
OS
ni
izonnsinai 

 W<BS>tyokusetu 
ki-nyuuryokuwo 
kirokusiteirunode ,
sofutouxea 
<BS><BS><BS><BS><BS><BS>OS
ni
izonnsimasenn .
-----

　どんな意味か分かりますか？　英語ではなく、ローマ字のようなので日本語だと分かります。<BS>はバックスペースを意味します。そして、改行が多用されていますが、これはかな変換を確定するために[Enter]キーを入力しているからです。
　また、半角・全角切り替えの[漢字]キー、Windowsメニューを表示する旗マークのキー、[PageUp]/[PageDown]キー、[NumsLock]キー、[PrintScreen]キー、矢印キーもログに残りません。
　ただし、かな変換において、候補漢字を探すための[変換]キーあるいは[スペース]キーはログとして残ります。スペースの数で何回変換のためにスペースキーを入力したのかをカウントできます。

　このログを翻訳すると次のようになります。しかしながら、どの漢字を選択しているのかは分からないので、文意から推測することになります。また、マウス操作によるマウスカーソル移動の可能性も考えられるので、それも考慮しておきます。

-----
●[変換][確定]OS[変換][確定]に[改行]依存しない[変換][確定]
[改行]
　W[BS]直接[変換][確定]キー入力を[変換][確定]記録しているので[変換][確定]、そのソフトウェア[変換][確定][BS][BS][BS][BS][BS][BS]OS[確定]に[確定]依存しません[変換][確定]。
-----

　本当に入力したテキストは次の通りです。

-----
○OSに依存しない
　直接キー入力を記録しているので、OSに依存しません。
-----

　かな変換の記号の違いなどありますが、いい線いっていることが分かります。実際に手を動かしてみると、結構ログの解読は面倒であることが分かると思います。
　手動でやるのも重要ですが、行数が多くなると大変なので、現在、自動的に翻訳作業を行うプログラムを作成中です。完成したらサイトで公開します。

　以上でログから内容を翻訳する基本的作業は分かったと思います。


　しかし、これで終わりではありません。今回のログが数行だけだったので楽でしたが、これが数万行だったらどうしますか？　その中から果たしてパスワードといったクリティカル（致命的な）情報を取得することができるでしょうか。このような問題に対するアプローチを例としてまとめてみました。

例１：目的の文字列を探すのは簡単ですが、目的の文字列が不明でそれを探すときは経験が必要です。具体的に言えば、ターゲットのパスワードを入手したいとします。通常パスワードの文字列自体を知らないので、メニュー６で検索することが不可能です。よって、前後の流れからパスワードやIDだと思われるところを推測することが必要です。

　ID部分がアットマーク（「@」）を含むのならば、メニュー６で「@」を指定して検索すればよいので簡単です。その直後に来る文字列がパスワードの可能性が高いと分かります。これはMSNメッセンジャーやYahooメッセンジャーといったメールアドレスをアカウントIDとして採用しているところを攻略するには有効な手です。

-----
keykatcher 64K 3.7
063161 bytes free
1-View Memory
2-Erase Memory
3-Change Password
4-Disable recording
5-NETPatrol Output
6-Search for String
7-Exit

6
Enter Search String)6-10 chars+@　←「@[Enter]」を入力。

Searching-Please Be Patient..　←文字列検索開始。
)@ nna  <BS>ga ki-wa-do  <BS><BS><BS><BS><BS>@] [ attoma-ku ( ) wo <BS><BS><BS><BS>
)@ <BS><BS><BS><BS>menyu- 5 <BS>6 de a<BS>[] @wo siteisite kennsakusure
)@ <BS><BS>1: <BS> s  pus<BS><BS><BS>ipusiron@ruffnex.oc.to hogehoge  
-----

　このログから最後の「ipusiron@ruffnex.oc.to hogehoge」部分が怪しいです。文字列検索の結果は通常のログの出力とは少し異なります。本来のログは「ipusiron@ruffnex.oc.to[Enter]hogehoge」であって、「ipusiron@ruffnex.oc.to」直後の空白は本当は無いのに追加されていることがわかります。

例２：キーロガーでキャプチャーされていることを前提とします。パスワードには長い無意味な特殊文字を含む文字列を選ぶようにとたびたび言われています。しかし、キーロガーを使うアタッカーから見れば、その対処方法は一番最悪であることが判明します。あなたがアタッカーだと仮定して、キーロガーのログをチェックしているとします。そのとき、明らかに文書にならないような文字列があり、さらに長くて、特殊文字を含んでいたら、これはパスワードだと気づくでしょう。よって、キーロガーを使用するアタッカーから見れば、日本語に近いパスワードの方が、逆にパスワードだと気づきにくいわけです。とはいえ、あまりにも簡単な日本語の挨拶のような文章、あるいは単語にしてしまうと、ディクショナリーアタック（辞書式アタック）で突破される可能性が高いので、注意してください。

例３：今年キーロガーを使い、不正に取得したネットバンクのパスワードを悪用し、１千数百万を不正送金した事件がありました。この事件でネットカフェでネットバンクを使うのは危険であるというコメントをした人が多かったですが、本質的な部分はそんなところにはありません。ネットカフェだろうが社内だろうがどこでも危険ですので、こんなことは当然のことであって本質とは言いがたいと思われます。それではどこに事件の本質があったのでしょうか。結論を言ってしまえば、ネットバンクの認証システムです。ネットバンクの大手のジャパンネットバンク（JNB）の場合、パスワード認証でログイン後、送金時には対応表を使ったもうワンクッション置いた認証があります。今回の事件はシティバンクがターゲットだったわけですが、シティバンクには対応表を使った認証がなく、静的なIDとパスワードのみのアカウントだけで送金まで行えたのが問題だったのです。
　この事件の被害者がネットカフェでジャパンネットバンクのアカウントを利用したと仮定します。それならば、キーロガーが設置してあったとしても、おそらく不正送金はされなかったでしょう。キーロガー設置者がジャパンネットバンクのアカウントは取得できたとしても、対応表の方が突破できないと思われます。対応表の数字はHTTP（HTTPS）で送られてくるわけなので、どうしてもキーロガーだけの力では解析が不可能です。トロイの木馬やSniffer盗聴、ショルダーハッキングなどを併用しなければ、対応表の求められている数字に対応する変換前数字（変換元数字）がアタッカーに分かることはないからです。

●まとめ
　どうでしたでしょうか？
　「キーロガーなんて誰でも設置できる」「キーロガーなんて低スキルのやることだ」なんて思っていた人でも、キーロガーひとつとっても奥が深いこと、解読テクニックは新鮮だったことだと思います（そうあって欲しい…）。

　このような直感を働かせることができるには、実際に買って、実際に実験した人しかなかなか分からないことです。というより、やったことがある人にしか分からないこともあるわけです。これから、私もそういうコンテンツを増やすように今後精進します。

　では、vol.4でまた会いましょう。

