x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: 基礎暗号学講座・第15回 〜公開鍵暗号の安全性の強弱〜  ---

著者：IPUSIRON

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　WB39では、仮定の強弱について解説した。今回は安全性の強弱について解説す
る。
　なぜ安全性の強弱の前に仮定の強弱を解説したのかと言うと、仮定と安全性は
密接な関係を持つからである。例えば、強い仮定を前提にすれば、強い安全性を
持たせやすいことが一般的に言える。
　仮定と安全性のどちらを重視するのかは暗号設計者や暗号実装者の選択に依存
するが、どちらの立場であっても理想的な暗号とは、弱い仮定を前提にして、強
い安全性を持つものである。

　暗号のおける重要な要素として、安全性・仮定の他に、モデルと効率性も存在
する。残りの2つに関しては今後WBで紹介するつもりなので、今回は仮定と安全性
のみに注目してもらいたい。


■0x02.) 公開鍵暗号の安全性

　公開鍵暗号の安全性は2つの観点で捉えることができる。1つ目が暗号化の安全
性レベル、2つ目が敵の攻撃法（攻撃能力）である。

　暗号化の安全性レベルは、次の4種類が存在する。

・一方向性（One-Wayness：OW）
・強秘匿性（Semantic Security：SS）
・識別不可能性（Indistingushability：IND）
・頑強性（Non-Malleability：NM）

　この並びには意味があり、下のものほど安全性レベルが高い。例えば、OWより
もNMの方が安全性が高い。その理由を知るためには、各安全性レベルの意味を知
らなければならない。

　また、敵の攻撃法は、次の3種類が存在する。

・選択平文攻撃（Chosen Plaintext Attack：CPA）
・選択暗号文攻撃（Chosen Ciphertext Attack：CCA）
・適応的選択暗号文攻撃（Adaptive Chosen Ciphertext Attack：CCA2）

　この並びにおいても、下のものほど強い攻撃法であることを意味する。

　よって、安全性レベルが4種類、敵の攻撃法が3種類あるため、公開鍵暗号の安
全性は合計12種類存在する。このことは次の表を見れば一目瞭然であろう。なお、
「安全性レベル」と「敵の攻撃法」の組はハイフンを挟んで表現される。今後も
この表現方法を使うので覚えて欲しい。

---------------------------------------
|    |OW     |SS     |IND     |NM     |
|----+-------+-------+--------+-------|
|CPA |OW-CPA |SS-CPA |IND-CPA |NM-CPA |
|----+-------+-------+--------+-------|
|CCA |OW-CCA |SS-CCA |IND-CCA |NM-CCA |
|----+-------+-------+--------+-------|
|CCA2|OW-CCA2|SS-CCA2|IND-CCA2|NM-CCA2|
---------------------------------------

　今の時点でこの表においてわかることは、表の左上より右下の方が安全性が高
いということである。つまり、NM-CCA2が最強の安全性ということである。


■0x03.) 公開鍵暗号の安全性の等価性

　先ほど示した表を再掲しておく。

---------------------------------------
|    |OW     |SS     |IND     |NM     |
|----+-------+-------+--------+-------|
|CPA |OW-CPA |SS-CPA |IND-CPA |NM-CPA |
|----+-------+-------+--------+-------|
|CCA |OW-CCA |SS-CCA |IND-CCA |NM-CCA |
|----+-------+-------+--------+-------|
|CCA2|OW-CCA2|SS-CCA2|IND-CCA2|NM-CCA2|
---------------------------------------

　この表において部分的に等価性がわかっているところもある。例えば、NM-CCA2
とIND-CCA2は等価であることがわかっている。公開鍵暗号の安全性について議論
において、IND-CCA2であるか否かが注目されるのはこのためである。

　さらに、知られている事実として、「NM-CCAはIND-CCAよりも真に強い」などが
挙げられる。このように隣同士が等価であったり、真に強いことがわかっている
例が存在する。


■0x04.) すでに登場した公開鍵暗号の安全性について

　これまでのWBにおいて、いくつかの公開鍵暗号を紹介してきた。これらはどの
安全性を満たすのかを復習しておく。

・教科書的RSA暗号はRSA仮定の下で、OW-CPA安全である。
・ElGamal暗号はCDH仮定の下で、OW-CPA安全である。
・拡張ElGamal暗号はDDH仮定の下で、IND-CPA安全である。

　まだ拡張ElGamal暗号の鍵生成アルゴリズム・暗号化アルゴリズム・復号アルゴ
リズムの仕様については言及していないが、結果についてはWB39で紹介したので、
ここで載せた。


■0x05.) OW

　公開鍵暗号が一方向性（OW）の意味で安全とは、公開鍵と暗号文から、平文全
体を求めることが困難であることとして定義される。

　そして、xとfからy=f(x)を計算するのが容易であるが、y=f(x)とfからxを求め
ることが困難であるとき、fは一方向性関数という。


■0x06.) SS

　公開鍵暗号が強秘匿性（SS）の意味で安全とは、暗号文から平文に関するどの
ような部分情報が漏れないこととして定義される。

　強秘匿性の意味で安全とは次のようにイメージできる。平文mを紙に書いて、そ
れを封筒に入れてしまう。この封筒は暗号文cそのものである。敵はこの封筒から、
平文に関し何ら情報を得ることができない。
　言い換えれば、敵は封筒（もちろん内部は見えない）から計算できることは、
封筒なしでも計算できるということである。

　よって、強秘匿性は次のように定義し直すことができる。任意の確率的多項式
時間アルゴリズムである敵Aに対し、ある確率的多項式時間アルゴリズムA'が存在
し、Aが暗号文cから求めたものと同じものを、A'はcを使うことなく求めることが
できるときに、強秘匿性（SS）の意味で安全という。記号で表現すれば、「∀A,
∃A';A(pk,c)=A'(pk)」になるだろう。


■0x07.) IND

　公開鍵暗号が識別不可能性（IND）の意味で安全とは次のようにイメージできる。
平文m0を書いた紙が入った封筒C_0と、平文m1を書いた紙が入った封筒C_1が存在
したときに、2つの封筒は外見からまったく見分けがつかない。
　言い換えれば、2つのうちの1つの封筒が与えられたときに、中身の紙にm_0,_m1
のどちらが書かれているかをわからないときに、識別不可能ということである。

　実はINDとSSの等価性は証明されている。SSは意味的には理解しやすい定義であ
り、INDは証明に使いやすい定義である。よって、暗号がSSの意味で安全であるこ
とを証明したい場合は、INDの定義で証明することが多い。

　INDの定義で証明するときは、敵とチャレンジャーの2者による次のようなゲー
ムで考える。

1：チャレンジャーは鍵生成アルゴリズムKeyGenを起動して、秘密鍵skと公開鍵pk
を生成する。

2：チャレンジャーは公開鍵pkを敵に送信する。

3：敵は2つの平文m_0,m_1を自由に選び、両方をチャレンジャーに送信する。

4：チャレンジャーは1ビットのbをランダムに選択する。暗号化アルゴリズムEnc
にm_bと秘密鍵skを入力し、暗号文c_bを生成し、敵に送信する。

5：敵はc_bを受信したら、bの推測値~bを計算して、出力する。

　このようなゲームにおいて、b=~bならば敵の勝ち、b≠~bならばチャレンジャー
の勝ちである。
　ここで、bは1ビットなので、敵は勘でbを選んだとしても、1/2の確率で敵は勝
つことができる。つまり、暗号としては敵の勝つ確率が1/2になることが一番望ま
しい。よって、公開鍵暗号が識別不可能性の意味で安全とは、任意の確率的多項
式時間アルゴリズムである敵が、無視できるくらい小さいεが存在するときに、
次の不等式が成り立つことである。

|Pr(敵が勝つ）-1/2|≦ε

　ちなみに、Prは確率、| |は絶対値を意味している。

　INDとSSの等価性が知られているが、その直感的な証明は次のURLに載せた。

http://akademeia.info/index.php?%B8%F8%B3%AB%B8%B0%B0%C5%B9%E6%B7%CF%A4%CE%B0%C2%C1%B4%C0%AD%C4%EA%B5%C1#a462b79c


■0x07.) NM

　公開鍵暗号が頑強性（NM）の意味で安全とは、暗号文から別の妥当な暗号文を
生成できないことである。もう少し厳密に言うと、ある平文mの暗号文cが与えら
れたときに、平文mと関係のあるm'の暗号文c'を生成できないことである。

　ここで述べている関係とは、明らかな関係については除いている。明らかな関
係とはmとm'のビット長が同じときなどである。同じビット長は公開情報であり、
どんな敵であってもmと同じビット長を持つm'の暗号文を生成することは容易であ
る。このような明らかな関係は除くのである。
　それでは明らかでない関係というのはどのようなものだろうか。例えば、m'=
m+1という関係やm'はmのビット反転といった場合などである。もし敵がこのよう
な明らかでない関係を満たす暗号文を生成することができてしまうと、公開鍵暗
号をビルディングブロックとして利用するアプリケーションによっては大きな問
題になってしまうのである。


■0x08.) CPA

　CPA（選択平文文攻撃）とは、敵が自分自身が選択した平文に対応する暗号文を
知ることができる状況における攻撃である。つまり、CPA攻撃者は、公開鍵とター
ゲットとなる暗号文を知ることができるのである。
　CPAの場合、敵は平文を送信すると暗号文を返してくれる存在を利用できること
を意味する。平文をクエリーとして受け取り、暗号文を返す存在を暗号化オラク
ル（Encryption Oracle：EO）という。つまり、CPA攻撃者は暗号化オラクルを使
えるということになる。


■0x09.) CCAとCCA2

　CCA（選択暗号文攻撃）とは、暗号化オラクルを利用する前に、自分自身が選択
した暗号文に対応する平文を知ることができる状況における攻撃である。このよ
うに暗号文をクエリーとして受け取り、平文を返す存在を復号オラクル（Decryp
tion Oracle：DO）という。つまり、CCA攻撃者は復号オラクルを使ってから（何
度も問い合わせ可能）、暗号化オラクルを利用できる。

　一方、CCA2（適応的選択暗号文攻撃）とは、復号オラクルを利用してから（何
度も問い合わせ可能）、暗号化オラクルを利用し、その後でも復号オラクルを利
用できる（何度も問い合わせ可能）状況における攻撃である。ただし、暗号化オ
ラクルで受け取った暗号文を、その後で復号オラクルに送信してはいけない。な
ぜならば、もし送信できてしまえば、敵は明らかにbを特定できまうからである。

　CCA2攻撃者の動きは次の図1のようになる。

（図1）http://s-akademeia.sakura.ne.jp/main/image9/ind-cca2.jpg


■0x0A.) 終わりに

　今回のWBでは公開鍵暗号の安全性について定義した。このような安全性の定義
の仕方は、署名の安全性の理解にも役に立つはずである。

　次回のWBでは拡張ElGamal暗号の仕様を定義し、その後でDDH仮定の下でIND-CP
A安全であることを証明する予定である。



