x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: 死のダイアログ ---

著者：金床

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　CSRFでは次のようなウェブアプリケーションが攻撃対象となる。

・Cookieによるセッション管理で認証を行っている
・Basic認証を使っている
・SSLクライアント認証を使っている

　最近Basic認証について色々と調べていたところ、CSRFによるBasic認証特有の
少し面白い攻撃方法を思いついた。といっても大したものではないので期待しな
いでほしい。技術的に大したことがないので、名前だけでも派手にすべく「死の
ダイアログ」と命名した。


■0x02.) とっても便利なパスワードマネージャ

　Basic認証によってアクセス管理を行っているウェブアプリケーションはCSRF攻
撃の対象となる。トークンなどを使ったCSRF対策が行われていない場合、基本的
には次のような条件が揃うと攻撃が成功してしまう。なお、以下の文章でイヴは
攻撃者、アリスはターゲットとなるユーザである。

・イヴが攻撃対象のウェブアプリケーションのURIを知っている
・イヴが攻撃対象のウェブアプリケーションの仕組み（送るべきフォームの要素）
を知っている
・アリスが罠のページを訪れる
・アリスが対象のウェブアプリケーションにログインしている

　ここで注目したいのは最後の「アリスが対象のウェブアプリケーションにログ
インしている」である。

　ログインしていれば、CSRFは（もちろんCSRF対策が施されていない場合）成功
する。ではログインしていないときはどうなるのだろうか。
　ログインしていない場合、アリスが罠のページを訪れ、ウェブアプリケーショ
ンに対して知らぬ間にリクエストが飛ぶと、ステータスコード401のレスポンスが
返される。すると、ウェブブラウザはおなじみのBasic認証のダイアログを出す。

　「ありゃりゃ…」と思わないだろうか？そう、Basic認証のダイアログが出てし
まうのである。パスワードマネージャと呼ばれる、ウェブブラウザにユーザIDや
パスワードを記憶させておく機能を使っていなければ、以下に述べる問題は起こ
らない。問題はこの機能を使っている場合だ。ダイアログが出現し、そこにはウ
ェブブラウザの便利でありがたい機能のおかげで、正しいユーザIDとパスワード
がセットされている。あとはOKボタンをクリックするか、あるいはEnterキーを押
してしまえば、CSRFが成功してしまうのだ。そしてさらにまずいのが、このダイ
アログはいわゆる「modal」と呼ばれるモードで登場することだ。このダイアログ
を何とかして閉じないと、そのウィンドウでの他の操作は一切行うことができな
いのである。

　Basic認証のダイアログというのは、ぱっと見た目でどのウェブアプリケーショ
ンが出したのかを区別することができない。なぜなら、違いは表示される文字だ
けだからだ。しかもこの表示される文字（Realmと呼ばれる）は大抵の場合英語で
あるため、普通のユーザはいきなり出てきたダイアログがまさか訪れているペー
ジ以外のウェブアプリケーションのものだとは思わないのである（思うユーザは
引っかからずに済むだろう）。

　では、ここでEnterキーを押してしまうのだろうか？おそらく普段パスワードマ
ネージャを利用している一般的なユーザであれば、多くの人が何も考えず押して
しまうだろう。「Basic認証のダイアログが出てきたらEnterキーを押すとOK」と
身体が覚えているのだ。

　さて、ここで多くのユーザはEnterキーを押してしまうと思われる。その場合は
CSRF攻撃は成功するわけだが、「あれ、なんでいきなりダイアログが出てくるん
だろう？」と違和感を持つ手強いユーザもいるかもしれない。このようなユーザ
はとりあえずキャンセルボタンを押す。するとダイアログは消えるわけだ。

　…筆者が何を思いついたのか、わかってきた読者もいるのではないだろうか。


■0x03.) ダイアログ、ダイアログ、ダイアログ

　少し警戒心のあるユーザがOKボタンを押さずにキャンセルボタンを押す、ある
いはEscキーを押すなどの方法でこのダイアログを閉じたとしよう。これでイヴの
攻撃は失敗に終わったのだろうか？いや、そんなことはない。一度失敗したから
といってあきらめてはいけないのだ。必要なのは再チャレンジの精神である。ど
こかのエライ人も再チャレンジが大事だと言っていた。そんなわけで一度閉じら
れたくらいではへこたれないのである。

　さてこのCSRFの攻撃対象がGETで実行可能な機能ならば、次のように簡単な方法
でダイアログを繰り返し出すことができる。

-----
<script src="http://www.jumperz.net/restricted/target2.jsp?foo=bar&1"></script>
<script src="http://www.jumperz.net/restricted/target2.jsp?foo=bar&2"></script>
<script src="http://www.jumperz.net/restricted/target2.jsp?foo=bar&3"></script>
<script src="http://www.jumperz.net/restricted/target2.jsp?foo=bar&4"></script>
...
-----

　ここで、CSRF攻撃の対象はtarget2.jspであり、攻撃のために使われるパラメー
タがfoo=barである。パラメータの最後の1から4までの数字はキャッシュ対策であ
り、攻撃の内容とは関係がない。

　閉じても閉じてもダイアログが出てくるので、困ったことにアリスは一切他の
操作ができなくなってしまう。少し詳しいユーザならばいくつかの回避策を思い
つくかもしれないが、根負けしてOKボタンを押してしまえばその瞬間にCSRFが成
功する。「死のダイアログ」とはこのような力ずくのCSRF攻撃のことである。キ
ャンセルしてもキャンセルしてもダイアログが出てくる。100回もキャンセルして
みるとわかるのだが、だんだん頭がもうろうとしてくる。判断力がにぶってきて
何も考えられなくなり、わかっていたはずなのについついOKボタンを押してしま
う。少し疲れている人ならば、閉じても閉じても現れるダイアログにそのまま昏
睡状態に落ちてしまい、最悪の場合はそのまま黄泉の国の住人となってしまう可
能性も低くない。まさに死のダイアログなのである。


■0x04.) POSTの場合

　攻撃対象の機能（画面）がPOSTしか受けつけない場合には、多少の工夫が必要
となる。ここでは実際に動くデモを作成したので、興味のある方はソースを参照
して頂きたい。IEとFireFoxで動作確認をした。基本的にはscriptタグからの読み
込みに対し401が返される場合と200が返される場合をイベント処理によって検知
し、アリスがログインした時点でフォームを実行する仕組みになっている。IEと
FireFoxでそれぞれこの際に発生するイベントが異なるため、navigator.userAge
ntによって処理を分けている。

　なお、たとえ死のダイアログといえども、Wizard Bibleの読者に危害を加えて
しまうのは筆者の望むところではない。そんなわけで今回はダイアログを数十回
キャンセルすれば、そこで攻撃が終了するようにした。実際の攻撃はこれがほぼ
無限に続くと思って頂きたい。

　デモについて説明する。まず、次のURLにアクセスする。

http://www.jumperz.net/restricted/index.jsp

　すると認証を求められる。ここでは次のユーザ名・パスワードでログインでき
るのだが、その際ウェブブラウザにこのID/PWを記憶させるようにしてほしい。

ユーザ名:　alice
パスワード:　1111

　このページにあるボタンをクリックすると、機能が実行されることになる（今
回はデモなので実際には意味のあることは何も実行されない）。そして画面にAc
tion executedと表示される。ここまでの手順が「アリスの自らの意志による機能
の実行」である。CSRFではイヴがアリスに対し、この機能を強引に（あるいは意
識させずに）実行させることになる。

　次に、一度ウェブブラウザを終了する。そしてウェブブラウザを再度起動し、
次のURL（CSRFの罠が仕掛けられている）にアクセスする。ところで、今回のデ
モは非常に危険である。そのため、体調が悪い人や寝不足の人はくれぐれもアク
セスしないようにしてほしい。

http://www.jumperz.net/exploits/ba1.jsp

　すると、繰り返しダイアログが出現する。このページは本来ならばダイアログ
を出しているウェブアプリケーション自体とは何の関係もないページである。そ
のため、ここにダイアログが出てくるのは不自然なのだ。そこであなたはこのダ
イアログをキャンセルすべきである。しかし先ほどから説明しているように、ダ
イアログが次から次へと現れる。あきらめてOKボタンを押してしまうと、先ほど
と同じ機能が実行されてしまうのだ。
　なお、今回は手抜きで認証を求めるページと罠のページが同じドメインに置い
てあるが、このことは攻撃の原理とは関係がない。このデモは異なるドメインに
対してでも同様に機能する。


■0x05.) 対策

　この攻撃は、知っているか知らないかで差が出る種類のものである。知ってい
る場合にはダイアログが次から次へと現れても、あわてずにすむ。ダイアログが
出てしまうのは、ステータスコード401のレスポンスが返ってきてしまうからだ。
そこで別のウィンドウを開き、そこからプロキシサーバーの設定を架空のIPアド
レスなどに変更し、一度ネットワークが繋がらないようにしてしまう。そうすれ
ばダイアログをキャンセルした後にそのページを閉じることができるようになる
だろう。同じ理由でLANケーブルを引っこ抜いてもOKである。もちろんウェブブラ
ウザのプロセスを強制終了させてもよいが、その場合はプロセスが「死ぬ」こと
になり、別の意味で「死のダイアログ」ということになる。
　また、FireFoxの場合、Escキーを素早く連打することでダイアログの出現を止
めることができるようだ。

　繰り返しになるがこれはそもそもウェブアプリケーション側がCSRFに対して脆
弱な場合にのみ有効な攻撃ある。トークン方式などによってCSRF対策が行われて
いる場合にはこの攻撃は通用しない。


■0x06.) まとめ

　Basic認証のダイアログはmodalで出てくること、Basic認証のダイアログはどの
ウェブアプリケーションでも見た目が同じであること、そしてパスワードマネー
ジャがとても便利であること（もちろんイヴにとって、である）などを利用した、
このような背筋が凍り付きそうな攻撃があることが理解していただけただろうか。
　いうまでもないが、非常に危険な手口であるため、悪用は厳禁である。

　…半分はネタなのだが、もちろん実際に使える手口である。


