x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: ハニーポットを作ろう（連載第12回） ---

著者：Narusase

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　前回はSnortのフロントエンドであるACIDのインストールと設定について解説し
ました。今回はTripwireかnepentesについて解説する予定でしたが、ちょっと趣
向を変えて、最低限必要なファイルの作成と削除だけに絞ってHIDSもどきを自作
する方法を紹介してみたいと思います。

　･･･いや、手抜きとかじゃないですよ（汗。


■0x02.) HIDSもどきの作成

　今回作るスクリプトで実現できる機能は、ファイルが作成または移動されたこ
とと、ファイルが削除あるいは移動されたことを発見することです。行うことと
しては、ある時点でのファイルのリストと、現在のファイルのリストの差分を取
ることで、変更のあったファイルを見つけ出し、その後、作成された物と、削除
された物をその中から抽出します。

　まずは、ある時点でのファイルのリストを作るスクリプトを作ります。そのた
めのスクリプトのファイル名は「hids-mklist-org.sh」としておきます。

-----
# vi hids-mklist-org.sh
-----

-----　「hids-mklist-org.sh」ファイルの内容（行番号付き）
01: #!/bin/bash
02: FILENAME="/root/list"
03: find / > ${FILENAME}.org
-----

　行っていることはごくごく簡単で、findコマンドを用いて1行毎に1つのファイ
ルをフルパスで表示させ、それをリダイレクトしてファイルに書き込んでいるだ
けです。

　次は、現在のファイルのリストを作り、差分を取るスクリプトを作ります。そ
のためのスクリプトのファイル名は「hids-mklist.sh」としておきます。

-----
# vi hids-mklist.sh
-----

-----　「hids-mklist.sh」ファイルの内容（行番号付き）
01: #!/bin/bash
02: FILENAME="/root/list"
03: find / > ${FILENAME}.now
04: cat ${FILENAME}.now ${FILENAME}.org | sort | uniq -u > ${FILENAME}.uniq
05: cat ${FILENAME}.org ${FILENAME}.uniq | sort | uniq -d > ${FILENAME}.del
06: cat ${FILENAME}.now ${FILENAME}.uniq | sort | uniq -d > ${FILENAME}.make
07: echo "#########################################################"
08: echo "削除もしくは移動されたファイル"
09: cat ${FILENAME}.del
10: echo "`cat ${FILENAME}.del | wc -l`個のファイルを発見しました"
11: echo "#########################################################"
12: echo "作成もしくは移動されたファイル"
13: cat ${FILENAME}.make
14: echo "`cat ${FILENAME}.make | wc -l`個のファイルを発見しました"
15: echo "#########################################################"
-----

　03行目は、先ほどのスクリプトとの違いはファイル名だけで、現在のファイル
のリストを作っています。
　04行目は、まず現在と過去のファイルのリストを出力し、それをソートし、un
iqコマンドを使い「重複がなかった行」のみをファイルに出力しています。つま
りこの時点でlist.uniqファイルの内容は新しく作られたファイルと移動されたフ
ァイル、削除されたファイルのリストということになります。
　05行目は先ほどとほぼ同等でuniqコマンドのオプションのみが違います。これ
は、過去のファイルのリストとユニークなファイルのリストを出力し、それをソ
ートし、uniqコマンドを使い「重複があった行」のみをファイルに出力していま
す。つまりこの時点でlist.delファイルの内容は削除されたもしくは移動された
ファイルのリストということになります。
　06行目はも同じようなことをしていますがこちらでは現在のファイルのリスト
とユニークなファイルのリストを比較しています。list.makeファイルの内容は当
然、作成されたもしくは移動されたファイルのリストということになります。
　07行目からは見つけたファイルを表示しています。


■0x03.) HIDSもどきの使い方

　これらのスクリプトの使い方は簡単です。
　まず、hids-mklist-org.shを実行し、正しい状態を記録します。
　次に、hids-mklist.shを定期的に実行し不審なファイルが作成されたり、必要
なファイルが削除されていないか目視で確認するという感じです。loggerコマン
ドとかを使ってsyslogにログを吐かせるのもよいかも知れません。また、cloneに
登録すれば自動的に一定時間ごとに問題が起きていないか調べることも可能です。


■0x04.) スクリプトの拡張（宿題？）

　ここまでくると移動されたファイルを見つけ出したいと思うでしょうが、それ
は皆さんの宿題（？）ということで･･･。
　ヒントとしてはファイルは移動された場合であってもi-node番号が変わらない
という性質を利用すれば良いということです。さらにヒントを出すと「stat FIL
E -c"%n %i"」とするとファイル名とi-node番号が表示されますので、findで作っ
たファイル名のリストからひとつひとつのファイル名を取り出しに繰り返し同じ
コマンドを実行すればi-node番号まで含んだリストを作れそうです。後は、i-no
de番号が同じでファイル名が違う物を探し出せばそれが移動したファイルだとい
うことがわかると思います。


■0x05.) おわりに

　今回はHIDSもどきの作成について話しました。
　色々と忙しかったため、内容に欠ける物になってしまって申し訳ありません。
次回はこそは、nepentesのインストールと設定に関してきちんと説明したいと思
います。



