x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第2章: ハニーポットを作ろう　〜連載第5回〜 ---

著者：Narusase

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　前回は、honeydとarpdのインストールを行いました。
　今回からは少しずつ、honeydの機能などについて説明していきたいと思います。
honeydの起動方法とその基本的なオプションに関して説明し、実際にhoneydにア
クセスしてみます。


■0x02.) 下準備

　まず、honeydを起動させるためにはいくつかの下準備が必要となります、ひと
つはhoneyd用のアカウント＆グループの作成で、もうひとつは設定ファイルの書
き換えです。

　honeyd用のアカウント＆グループの作成ではhoneydのインストール時に「/usr
/local/share/honeyd」以下の関係する各ファイルに割り当てられているUIDおよ
びGIDを用いるように設定します。各ファイルの所有者の書き換えが面倒でない場
合は、他のUIDおよびGIDを使用してもかまいません。
　ここではアカウント＆グループ名はハニーポットに関係すると言うことでbee（
「蜜蜂」という意味）とすることにします。実際のアカウント＆グループの作成
には次のようなコマンドを実行します。

------
groupadd -g 32767 bee
adduser -u 1000 -g 32767 -s /sbin/nologin bee
------

　次に、サンプルの設定ファイルのバックアップを作成し、サンプルを元に新た
な設定を作成します。

------
cd /usr/local/share/honeyd/
cp config.ethernet config.sample.ethernet
vi config.ethernet
------

　変更するのは04行目と10行目で、新たに11行目を追加しています。
　04行目では最後の部分がblockからopenに、11行目ではIPアドレスが192.168.1.
125から192.168.1.2へ変更されています。なお、IPアドレスは適宜自分の環境に
合わせてください。

　設定後の設定ファイルは次のようになります。

------
01 create default
02 set default default tcp action block
03 set default default udp action block
04 set default default icmp action open
05
06 create template
07 set template ethernet "3com"
08 set template personality "Linux 2.4.7 (X86)"
09
10 bind 192.168.1.2 template
11 bind 192.168.1.3 default
------

　ここで、簡単に設定について説明します。
　まず、01行目では「default」のテンプレートを作成しています。
　02〜04行目では「default」のテンプレートに対してデフォルトの動作として、
TCPとUDPについてはすべてパケットをブロックし、ICMPについてはすべて受け付
けるように設定しています。
　06行目では「template」のテンプレートを作成しており、07行目では3comのEt
hernetアダプタ（NIC）をエミュレートするように設定ています。
　08行目ではエミュレーションするOSの動作としてX86系のCPU上のLinux 2.4.7を
指定しています。
　そして、10、11行目でそれぞれ、監視対象となるIPアドレスとテンプレートを
結びつけています。つまり、ここでは192.168.1.2と192.168.1.3の仮想マシンを
作成してるということになります。


■0x03.) 起動

　連載5回目にして、ようやくhoneydを起動するときが来ました。

　次のようにコマンドを入力して起動します。

--------
honeyd -d -f /usr/local/share/honeyd/config.ethernet -i eth0 -u 1000 -g 32767 192.168.1.2-192.168.1.3
--------

　ここで、簡単に起動に必要なオプションについてのみ説明します。
　-dオプションはデーモン化せずに実行することを意味します。また、このオプ
ションを付けた場合、詳細なデバッグメッセージが有効になります。したがって、
実際の運用時には使用しないオプションで、どちらかといえば構築中のちょっと
した実験や、バグの原因解明などのために使うオプションと言えます。
　-fオプションは読み込む設定ファイルを指定します。ここで設定ファイルを指
定しない場合、デフォルトの設定で動作します。
　-iオプションはどのインターフェースで通信を待ち受けるかを指定します。複
数のインターフェースがある場合にどちらのインターフェースを監視するか指定
するためのものです。
　-uおよび-gオプションはそれぞれHoneydの実行時に用いるUIDおよびGIDを指定
します。デフォルトではUIDとGIDの両方とも32767を用います。なぜか一部の設定
ファイルなどではUIDは1000に設定されているため-uオプションの使用が必要です。

　最後のIPアドレスは監視対象とするネットワークアドレスやホストアドレスを
意味します。実際にはホストアドレス（「192.168.1.1」の型）に加えてネットワ
ーク単位（「192.168.1.0/24」の型）、ある一定の範囲（「192.168.1.10」〜「
192.168.1.20」の型）が指定できます。


■0x04.) 実験

　honeydを実行するといろいろメッセージが表示され、シェルに戻らない状態に
なります。この状態になればhoneydはきちんと起動しているということになりま
す。設定ファイルにミスがある場合は、たいがいエラーメッセージを表示してす
ぐにシェルに戻ります。

　では早速、LAN内の別のマシンから、「192.168.1.2」にnmapを用いてポートス
キャンをして、honeydが未使用アドレスを監視できているか確かめてみましょう。

-----
[root@localhost root]# nmap -sT 192.168.1.2
Starting nmap 3.81 ( http://www.insecure.org/nmap/ ) at 2005-09-10 14:00 JST
Interesting ports on 192.168.1.2:
PORT      STATE SERVICE
1/tcp     open  tcpmux
2/tcp     open  compressnet
3/tcp     open  compressnet
･･･（中略）･･･
65301/tcp open  pcanywhere
MAC Address: 00:D0:96:E2:2B:F0 (3com Europe)

Nmap finished: 1 IP address (1 host up) scanned in 4.760 seconds
-----

　「192.168.1.2」はどうやらほとんどのポートが空いている状態のようですね。
よく見るとMACアドレスも3comのものとして見えているようです。

　では、次は「192.168.1.3」はどうでしょうか？

-----
[root@localhost root]# nmap -sT 192.168.1.3
Starting nmap 3.81 ( http://www.insecure.org/nmap/ ) at 2005-09-10 15:00 JST
Note: Host seems down. If it is really up, but blocking our ping probes, try
-P0
Nmap finished: 1 IP address (0 hosts up) scanned in 2.104 seconds
-----

　おかしいですね、「192.168.1.3」のホストは起動していないようです。

　では、自分のIPアドレス（192.168.1.1）に対してはどうでしょう。

-----
[root@localhost root]# nmap -sT 192.168.1.1
Starting nmap 3.81 ( http://www.insecure.org/nmap/ ) at 2005-09-10 15:10 JST
Interesting ports on 192.168.1.1:
(The 1659 ports scanned but not shown below are in state: closed)
PORT      STATE SERVICE
22/tcp    open  ssh
80/tcp    open  http
199/tcp   open  smux
32770/tcp open  sometimes-rpc3
MAC Address: 00:04:5F:11:22:33 (Evalue Technology)

Nmap finished: 1 IP address (1 host up) scanned in 3.103 seconds
-----

　どうやら、「192.168.1.1」はアクセスできているようです。

　では、pingはどうでしょうか？

-----
[root@localhost root]# ping 192.168.1.1 -c 1
PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data.
64 バイト応答 送信元 192.168.1.1: icmp_seq=0 ttl=64 時間=0.233ミリ秒

--- 192.168.1.1 ping 統計 ---
送信パケット数 1, 受信パケット数 1, パケット損失 0%, 時間 0ミリ秒
rtt 最小/平均/最大/mdev = 0.233/0.233/0.233/0.000ミリ秒, pipe 2


[root@localhost root]# ping 192.168.1.2 -c 1
PING 192.168.1.2 (192.168.1.2) 56(84) bytes of data.
64 バイト応答 送信元 192.168.1.2: icmp_seq=0 ttl=255 時間=0.565ミリ秒

--- 192.168.1.2 ping 統計 ---
送信パケット数 1, 受信パケット数 1, パケット損失 0%, 時間 0ミリ秒
rtt 最小/平均/最大/mdev = 0.565/0.565/0.565/0.000ミリ秒, pipe 2


[root@localhost root]# ping 192.168.1.3 -c 1
PING 192.168.1.3 (192.168.1.3) 56(84) bytes of data.
送信元 192.168.1.74 icmp_seq=0 目的のホストへ届きません

--- 192.168.1.3 ping 統計 ---
送信パケット数 1, 受信パケット数 0, +1 エラー, パケット損失 100%, 時間 0ミリ秒, pipe 2
-----

　実験してみると、やはり「192.168.1.3」へは届いていないことがわかります。
　なぜ、「192.168.1.1」や「192.168.1.2」へのスキャンには反応するのに、「
192.168.1.3」へのスキャンには反応しないのでしょうか？
　紙面もつきてきたので、この問題の解決は次回に行います。


■0x05.) まとめ

　今回は、honeydの起動方法とその基本的なオプションに関して説明しました。
　そして、honyedが動作していることも確認しました。
　しかし、実験では自分のIPアドレス（192.168.1.1）や「192.168.1.2」へはア
クセスできるのに、「192.168.1.3」を監視させようとしてもうまく動作しないと
いう問題が発生しました。
　そこで、次回はその問題に対してどう対処するのかについて解説していきたい
と思います。


