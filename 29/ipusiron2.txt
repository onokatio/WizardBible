x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x

--- 第○章: 基礎暗号学講座 〜 第5回 〜 ---

著者：IPUSIRON

x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x
x0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0xx0xXx0x


■0x01.) はじめに

　今回は多くのブロック暗号で採用されているFeistel型構造を解説します。


■0x02.) Feistel型構造

[定義]
次のようなブロック暗号の構造をu段のFeistel型構造と呼ぶ。第i番目のF_iは{0
,1}^nから{0,1}^nへの関数である。各F_iはラウンド関数と呼ばれる。

http://s-akademeia.sakura.ne.jp/main/image9/Feistel1.jpg

u段のFeistel型構造への入力(L0,R0)で表すことにする。ただし、L0∈{0,1}^n、
R0∈{0,1}^nである。またi=1,…,uに対して、L_i=R_i-1,R_i=L_i-1+F_i(R_i-1)と
おく。このとき出力は(L_u,R_u)で表される。

■0x03.) 理想化した場合

[定義]
長さ2nの擬似ランダム置換族からランダムに選ばれた擬似ランダム置換と呼ぶ。
同様に長さnの擬似ランダム関数族からランダムに選ばれた関数を擬似ランダム関
数と呼ぶ。

　すでに擬似ランダム置換と擬似ランダム関数についてはWB27で定義しています。
　注意して欲しいのは前者では長さが2nビットであり、後者では長さがnビットと
いうことです。
　前者はなぜ長さnについて触れているかというと、Feistel型構造の入力がL0（
nビット）とR0（nビット）の2つなので合計で2nビットになっているからです。ま
た逆関数は任意のラウンド関数F_iについて成り立ちます。逆関数が存在するので
Feistel型構造は任意のラウンドF_iについて{0,1}^2nの置換であることがわかり
ます。
　一方、後者はなぜ長さnについて触れているかというと、ラウンド関数F_iの入
力はnビット、出力がnビットです。しかし逆関数は存在するとは限りません。よ
って置換ではなく関数にしているわけです。

　ここで知りたいことは、Feistel型構造において各F_iが完全な擬似ランダム関
数であると理想化したとき、u段のFeistel型構造（ψ(F1,…,F_u)と表記される）
は擬似ランダム置換になるかということです。
　段数がu段という一般の話から取り組むのは難しいので、まず2段のときから考
えていきます。こういったアプローチは数学においてよく使われます。つまり具
体的な例から始めて、いくつかサンプルを取ってから定理の一般化するわけです。

[問題1]2段のFeistel型構造は擬似ランダム置換になるか？

　定義の関係式にi=2を代入すると次の関係式が成り立ちます。

L2=R1=L0+F1(R0)

[1]入力(L0,R0)を(0^n,0^n)としたときの出力を(a,b)として調べます。

http://s-akademeia.sakura.ne.jp/main/image9/Feistel2.jpg

[2]次に入力(L0,R0)を(1^n,0^n)としたときの出力を(a',b')として調べます。

http://s-akademeia.sakura.ne.jp/main/image9/Feistel3.jpg

　ここでa+a'を調べます。

a+a'
=(0^n+F1(0^n))+(1^n+F1(0^n))
=0^n+F1(0^n)+1^n+F1(0^n)
=0^n+1^n　（∵F1(0^n)+F1(0^n)=0）
=1^n

　a+a'=1^nが成り立つかどうかをチェックし、成り立てば1、そうでなければ0を
出力する識別アルゴリズムDを考えます。これを図にすると次のようになります。

http://s-akademeia.sakura.ne.jp/main/image9/Feistel4.jpg

　なお置換πを利用する識別アルゴリズムDのことをD^πと記述することにします。
このとき置換πがψ(F1,F2)の場合は必ずa+a'=1^nが成り立つので、100%の確率で
Dは1を出力します。

P_A
=Pr(D^π=1)
=1　←(*)　D^πが1を出力する確率が1という意味

　一方、置換πが長さ2nのランダム置換族からランダムに選ばれた場合に、a+a'
=1となる確率は次のように計算できます。

P_random
=Pr(D^π=1)
=Pr(a+a'=1)
={2^(2n)×2^n×(2^(2n)-2)!}/{2^(2n)}!　←(**)
=(2^n)/(2^(2n)-1)
＜2/(2^n)　←(***)

　(**)の計算は次のように行った。このような解法は講座の第4回目で言及したは
ずです。

http://s-akademeia.sakura.ne.jp/main/image9/Feistel5.jpg

　よって、(*)(***)よりDの識別利得（アドバンテージ）は次のように計算できま
す。

Adv(D)=|P_A-P_random|＞1-2/(2^n)

　つまり十分大きいということになります。nを無限大に持っていけば、2/(2^n)
は0になるので、識別利得は1に近づきます。
　ゆえに擬似ランダム置換族にならないことがわかりました。


　では3段ではどうでしょうか。これは擬似ランダム置換となることが示されてい
ます。証明は各自の課題としておきます。


■0x04.) 強擬似ランダム

　普通の擬似ランダムの概念とは異なり、強擬似ランダムという概念がFeistel型
構造と関連してきますので、解説します。

　まず強擬似ランダム置換とは次のように定義されます。

[定義]
長さ2nのランダム置換族P_2nの部分集合A_2nが、選択暗号文攻撃（CCA）において
もP_2nと識別困難なとき、A_2nを長さ2^nの強擬似ランダム置換族と呼ぶ。

　この定義に関連して、次のような結果がわかっています。これは結果だけ示し
ておきます。

[定理]
（1）3段のFeistel型構造は強擬似ランダム置換にはならない。
（2）4段のFeistel型構造は強擬似ランダム置換になる。


■0x05.) おわりに

　今回はFeistel型構造の基本だけについて解説しました。基本だけでしたがきち
んと計算問題をこなせば、それ以上の概念が出てきたとしてもすんなりと理解で
きることでしょう。この置換とか関数が絡んだときの確率計算にまだ慣れていな
い方はWB2を復習しておいてください。
　来月はMAC（Message Authentication Code）について解説する予定です。MACは
共通鍵暗号系のメッセージの正真性（改ざんを検知）を確かめるための仕組みで
す。


